?load
??load
1+1
x <- 2
kwadrat <- function(x) x*x
View(kwadrat)
View(kwadrat)
kwadrat <- function(x=5) x*x
rowne <- function(x,y) if (x == y) "a" else 'b'
mnoz <- function(x,y,w,fun)
if(y==0) w else fun(x,y-1,w+x,fun)
mnoz(4, 5, 0, mnoz)
mnoz <-function(x, y, w)
if (y==0) w else mnoz(x, y-1, w+x)
mnoz (4, 5, 0)
[1, 2, 3, 4]
recur_factorial <- function(n)
if (n <= 1) 1 else n * recur_factorial(n-1)
recur_factorial(5)
recur_factorial(6)
recur_factorial(8)
inper_factorial <- function(n)
x <- 0
inper_factorial <- function(n) {
x <- 0
}
inper_factorial <- function(n) {
x <- 1
for (i in 2:n) x <- x * i
x
}
inper_factorial(5)
inper_factorial(8)
rm x
rm(x)
x <- c(10.4, 5.6, 3.1, 6.4, 21.7)
y <- c(x, 0, x)
1:9
30:1
seq(-5,5,by=0.2)
seq(-5,5,length=51)
rep(c(1,2),2)
seq(-5,5,l=51)
x <- 1:100
sinus <- sin(x)
max(x)
min(x)
mmean(x)
mean(x)
median(x)
length(x)
sum(x)
prod(x)
sort(x)
diff(x)
rank(x)
which.max(x)
discr <- function (x)
if (x < -0.5) -1 else if (x > 0.5) 1 else 0
discr(x)
View(discr)
View(discr)
discr <- function (x)
}
discr <- function (x) {}
discr <- function (x) {
if (x < -0.5) return -1
if (x > 0.5) return 1
discr <- function (x) {
if (x > 0.5) return 1
discr <- function (x)
if (x < -0.5) {}
discr <- function (x)
if (x < -0.5) {
return -1
} else if (x > 0.5) {}
discr <- function (x)
if (x < -0.5) {
return -1
} else if (x > 0.5) {
return 1
discr <- function (x)
if (x < -0.5) {
} else if (x > 1){
print('bigger')
} else {
print('smaller')
}
discr <- function (x)
}
discr <- function (x) {}
discr <- function (x) {
if (x < -0.5) {return -1} else if (x > 0.5) {return 1} else {return 0}
discr <- function (x)
if (x < -0.5) -1 else if (x > 0.5) 1 else 0
discr(x)
sin(1:100)
discr(x)
discr(1:100)
discr(-0.7)
discr(0.7)
discr(0.2)
discr
discr <- function (x)
ifelse(x < -0.5, -1, ifelse(x > 0.5, 1, 0))
dscr(-0.7)
discr(-0.7)
discr(0.7)
discr(0.2)
discr(y)
discr(sin(1:100))
discr <- function (x)
ifelse(x < -0.5, "A", ifelse(x > 0.5, "C", "B"))
discr(sin(1:100))
discr <- function (x)
ifelse(x < -0.5, 'A', ifelse(x > 0.5, 'C', 'B'))
discr(sin(1:100))
View(inper_factorial)
View(recur_factorial)
View(inper_factorial)
View(discr)
